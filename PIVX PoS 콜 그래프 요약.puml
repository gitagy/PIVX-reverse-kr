@startuml
title PIVX

note top of main
 bootstrap
end note

state main {
  state AppInit
  state AppInit2
  AppInit --> AppInit2
  AppInit2 --> GenerateBitcoins
  AppInit2 --> StartNode
}

note top of StartNode
 My Node
end note

state StartNode {
  state ThreadMessageHandler {
    state ProcessMessage
    state SendMessage
  }
}

state PeerNodes {
  PeerNodes --> ReceiveNewBlock
}

note top of GenerateBitcoins
 PoW 든 PoS 든 , 마이닝 로직
end note

state GenerateBitcoins {
  state ThreadBitcoinMiner
  state BitcoinMiner
  ThreadBitcoinMiner --> BitcoinMiner
}

state BitcoinMiner {
  state CreateNewBlockWithKey
  state CreateNewBlock
  state CreateCoinStake {
    state findInputLists {
      state SelectStakeCoins {
        state AvailableCoins
      }
    }
  state findStakingTargetHit {
    state nHashDriftLoop {
      state Stake
      Stake --> validationStaking
    }
  }
  }

  BitcoinMiner --> CreateNewBlockWithKey
  CreateNewBlockWithKey --> CreateNewBlock
  CreateNewBlock --> CreateCoinStake
  CreateCoinStake --> findInputLists
  findInputLists --> findStakingTargetHit
  
  state ProcessBlockFound
  state NotifyToNodes
  
  CreateCoinStake --> ProcessBlockFound
  ProcessBlockFound --> ProcessNewBlock
  ProcessBlockFound --> NotifyToNodes
  NotifyToNodes --> SendMessage
  
  
}

note top of ReceiveNewBlock
 연결된 피어로 부터
 새로운 블록을 수신
end note

state ReceiveNewBlock {
  state UpdateTip
  UpdateTip --> ProcessMessage
  ProcessMessage --> ProcessNewBlock
}

state ProcessNewBlock {
}

state AcceptBlock {
    state CheckProofOfStake
    state AcceptBlockHeader
    state CheckBlock
    state ContextualCheckBlock
    CheckProofOfStake --> AcceptBlockHeader
    AcceptBlockHeader --> CheckBlock
    CheckBlock --> ContextualCheckBlock
}

state validationStaking {
  state CheckStake
  state StakeTargetHit
  CheckStake --> StakeTargetHit
}

ProcessNewBlock --> AcceptBlock
AcceptBlock --> validationStaking

@enduml